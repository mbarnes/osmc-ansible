---
- name: Begin service configuration
  become: yes
  block:

  - name: "{{ docker_service_name }} : Pull docker image"
    docker_image:
      name: "{{ docker_service_image_name }}"
      source: pull

  - name: "{{ docker_service_name }} : Create volume mount points"
    file:
      path: "{{ item.path }}"
      mode: "{{ item.mode | default(omit) }}"
      owner: "{{ item.owner | default(ansible_user_uid) }}"
      group: "{{ item.group | default(ansible_user_gid) }}"
      state: directory
    loop: "{{ docker_service_mount_points }}"

  - name: "{{ docker_service_name }} : Include configuration tasks"
    include_tasks: "{{ docker_service_config_tasks }}"
    when: docker_service_config_tasks

  # Do not replace existing environment files since their
  # purpose is to adjust container limits post-installation.
  - name: "{{ docker_service_name }} : Add environment file"
    copy:
      content: "{{ docker_service_environment }}"
      dest: "/etc/default/{{ docker_service_name }}"
      mode: u=rw,g=r,o=r
      owner: root
      group: root
      force: false
    when: docker_service_environment is defined

  - name: "{{ docker_service_name }} : Add service file for docker image"
    template:
      src: "{{ docker_service_name }}.service.j2"
      dest: "/etc/systemd/system/{{ docker_service_name }}.service"
      mode: u=rw,g=r,o=r
      owner: root
      group: root
    register: docker_service_file

  - name: "{{ docker_service_name }} : Enable and start service"
    systemd_service:
      name: "{{ docker_service_name }}.service"
      enabled: true
      state: "{{ docker_service_file.changed | ternary('restarted', 'started') }}"
      daemon_reload: "{{ docker_service_file.changed }}"

#!/usr/bin/ansible-playbook
---
#
# Configures hosts in an inventory group named "mediacenter_group"
# consisting of pre-installed OSMC devices with networking and SSH
# service available.
#
# Usage: ./setup.yml --ask-vault-pass
#
# Available tags:
# - system        : Run all system-level tasks (as root)
# - user          : Run all user-level tasks
# - common_system : (system) Common System Configuration
# - journal       : (system) Journal Configuration
# - connman       : (system) ConnMan Configuration
# - mta           : (system) Mail Transport Agent (MTA) Configuration
# - ups           : (system) Uninterruptible Power Supply (UPS) Configuration
# - vpn           : (system) OpenVPN Configuration
# - storage       : (system) Storage Configuration
# - common_user   : (user) Common User Configuration
# - powerline     : (user) Powerline Configuration
# - kodi          : (user) Kodi Configuration
# - retropie      : (user) RetroPie Configuration
#

- hosts: mediacenter_group
  remote_user: osmc

  vars:

    network_cidr: "{{ (local_area_network + '/' + local_area_netmask) | ansible.utils.ipaddr('net') }}"
    host_ip_addr: "{{ ansible_all_ipv4_addresses | ansible.utils.ipaddr(network_cidr) | first }}"
    ansible_fqdn: "{{ lookup('community.general.dig', host_ip_addr + '/PTR') }}"

    # Host services are determined by DNS aliases
    host_provides_kodi: "{{ lookup('community.general.dig', 'kodi') == host_ip_addr }}"
    host_provides_nfs:  "{{ lookup('community.general.dig', 'nfs' ) == host_ip_addr }}"

    # XXX Hard-coding the full path because this is evaluated
    #     from a system-level task (exports.j2) and the value
    #     of "ansible_user_dir" in that context is "/root".
    kodi_userdata_path: "/home/osmc/.kodi/userdata"

  pre_tasks:

  - name: Check Ansible version
    assert:
      that: "ansible_version.full is version('2.9', '>=')"
      msg: "This playbook requires Ansible 2.9 or later"
    tags:
    - always

  - name: Check for necessary inventory variables
    assert:
      that: "{{ item }} is defined"
      msg: "Missing required variable \"{{ item }}\". Please add this to your inventory."
    loop:
    - local_area_network
    - local_area_netmask
    - nfs_host
    tags:
    - always

  - name: Verify vault secret
    set_fact:
      vault_test: !vault |
        $ANSIBLE_VAULT;1.1;AES256
        37393232346234616538646162396633353964346536303438363862383035643166343438663836
        3830353761366261363430336430653836616233366239640a653134326561306261643436303539
        66393361353064353139626632366562363337333063663865353333333230383336363436626563
        3236356330363838620a306332613635313765393939306265636465313830666637613433386465
        63306364396263333965613739613663323331333733316438383165636230396366
    tags:
    - always

  tasks:

  #------------------------------------
  # Begin system-level tasks (as root)
  #------------------------------------

  - name: System-level tasks
    become: yes
    become_method: sudo
    # The -i is necessary to use root's PATH.
    become_flags: -H -S -n -i
    block:

    #-----------------------------
    # Common System Configuration
    #-----------------------------

    - import_role:
        name: common_system
      vars:
        common_system_extra_packages:
        - python3-netaddr  # for ipaddr filter
      tags:
      - common_system
      - system

    #-----------------------
    # Journal Configuration
    #-----------------------

    - import_role:
        name: journal
      tags:
      - journal
      - system

    #-----------------------
    # ConnMan Configuration
    #-----------------------

    - import_role:
        name: connman
      tags:
      - connman
      - system

    #------------------------------------------
    # Mail Transport Agent (MTA) Configuration
    #------------------------------------------

    - import_role:
        name: mta
      when: host_provides_nfs
      tags:
      - mta
      - system

    #--------------------------------------------------
    # Uninterruptible Power Supply (UPS) Configuration
    # For an APC Back-UPS CS 350
    #--------------------------------------------------

    - import_role:
        name: ups
      when: host_provides_nfs
      tags:
      - ups
      - system

    #-----------------------
    # OpenVPN Configuration
    #-----------------------

    - import_role:
        name: vpn
      when: host_provides_nfs
      tags:
      - vpn
      - system

    #-----------------------
    # Storage Configuration
    #-----------------------

    - import_role:
        name: storage
      when: host_provides_nfs
      tags:
      - storage
      - system

    - import_role:
        name: smartd
      vars:
        smartd_devices:
          DEVICESCAN:
            type: removable
            nocheck: standby
            mail_recipients:
            - "{{ mta_destination_address }}"
            mail_script: /usr/share/smartmontools/smartd-runner
      when: host_provides_nfs
      tags:
      - storage
      - system

  #-------------------------------------
  # End of system-level tasks (as root)
  #-------------------------------------

  #---------------------------
  # Common User Configuration
  #---------------------------

  - import_role:
      name: common_user
    tags:
    - common_user
    - user

  #-------------------------
  # Powerline Configuration
  #-------------------------

  - import_role:
      name: powerline
    tags:
    - powerline
    - user

  #--------------------
  # Kodi Configuration
  #--------------------

  - import_role:
      name: kodi
    vars:
      kodi_webserver: "{{ host_provides_kodi }}"
      kodi_webserver_port: 8000
    tags:
    - kodi
    - user

  #------------------------
  # RetroPie Configuration
  #------------------------

  - import_role:
      name: retropie
    tags:
    - retropie
    - user
